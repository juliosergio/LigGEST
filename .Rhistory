setwd("/media/checo/7B2C787106E895ED/BID2012")
install.packages("rgeos")
library(rgeos)
?`SpatialPolygons
library(sp)
library(sp)
??SpatialPolygons
??version
R.Version()
source('/media/checo/7B2C787106E895ED/LigGEST/LigGEST.R')
5 %/% 2
1i
.7-.6-.1
?zapsmall
7/.1
.7/.1
.7/.1 - 7
.Machine
norm(c(3,4))
norm(as.matrix(c(3,4)))
norm(as.matrix(c(3,4)), "F")
?norm
?kronecker
?image
shiny::runApp('/media/checo/7B2C787106E895ED/LigGEST')
runApp('/media/checo/7B2C787106E895ED/LigGEST')
shiny::runApp('/media/checo/7B2C787106E895ED/LigGEST')
install.packages(c("backports", "broom", "data.table", "devtools", "dplyr", "geosphere", "glue", "hms", "htmlTable", "hunspell", "jqr", "lazyeval", "lubridate", "mapview", "openssl", "plotrix", "purrr", "raster", "Rcpp", "reshape2", "rgdal", "rgeos", "rJava", "rmarkdown", "R.utils", "satellite", "sf", "shinyWidgets", "spdep", "stringi", "tidyr", "tidyselect", "tidytext", "tidyverse", "tmap", "tmaptools", "webshot", "yaml"))
install.packages(c("Rcpp", "rmarkdown"), lib="/usr/local/lib/R/site-library")
setwd("/media/checo/7B2C787106E895ED/ESTADISTICA2017.ProyFinales")
# setwd("~/IMTA/Probabilidad y Estadistica/Proyecto Final")
library(ncdf4)
library(DRaWR)
source("DrawField.R", chdir = T)
library(sp)
library(gstat) # Biblioteca de geoestad????stica, incluye Kriging
library(dplyr) # for "glimpse"
library(ggplot2)
library(scales) # for "comma"
library(magrittr)
# 3.- Abrir el archivo VientoMx.nc, que trae la componentes U y V del viento,
# para una ?rea que cubre la Rep?blica Mexicana
nc <- nc_open("VientoMx.nc")
# 4.- Convierta las estructuras de informaci?n del archivo NetCDF a data.frame,
# conservando exclusivamente los renglones correspondientes al mes 8 (agosto).
lon <- ncvar_get(nc, "lon") - 360 # Convertimos a absoluto
lat <- ncvar_get(nc, "lat")
tm <- ncvar_get(nc, "time")
uwnd <- ncvar_get(nc, "uwnd")
vwnd <- ncvar_get(nc, "vwnd")
tm <- as.Date(tm, origin="1800-01-01 00:00:00")
# Transformar a Data.frame, conservando datos del mes 8
datos <- expand.grid(lon=lon, lat=lat, time=tm)
datos$uwnd <- as.numeric(uwnd)
datos$vwnd <- as.numeric(vwnd)
datos2 <-subset(datos,time=="2010-08-01")
View(datos2)
# 5.- Magnitud de la Velocidad total
datos2$mngv <- sqrt(datos2$uwnd^2 + datos2$vwnd^2)
# 6.- Se provee el archivo Mexico.csv, que contiene las coordenadas
# de los pol?gonos que constituyen la frontera de la Rep?blica Mexicana.
# Lea este archivo en una variable de R.
pp <- read.csv("Mexico.csv")
# Usando los datos originales
indFecha <- which(tm=="2010-08-01")
uwndSecc <- uwnd[,,indFecha]
vwndSecc <- vwnd[,,indFecha]
# Velocidad total
Vsecc <- sqrt(uwndSecc^2 + vwndSecc^2)
# lo dibujamos
Mbreaks <- pretty(range(Vsecc, na.rm = T),10)
Mcols <- colorRampPalette(c("cornsilk2","violet","violetred1","violetred4"),space="rgb")
DrawContColors(list(lasx=lon, lasy=lat, mm=Vsecc), Mbreaks, Mcols, pp=pp, polmandatory = F)
# 8.- Los datos provistos en el NetCDF est?n a una resoluci?n de 0.8 grados, tanto en la longitud como en la latitud,
# lo que da como resultado una malla de 76 pot 32 puntos. Elabore una malla de 190 por 80 puntos (lon x lat),
# que cubra el mismo espacio. Para esto podr? auxiliarse de las funciones seq() y expand.grid().
# Recuerde que esta ?ltima funci?n entrega como resultado un data.frame.
lon2 <- seq(-130,-70, length=190)
lat2 <- seq(10,34.8, length=80)
malla2 <- expand.grid(lon=lon2,lat=lat2)
malla2
# 9.- Calcule el variograma experimental para la magnitud de la velocidad, calculada en el paso 5, con la funci?n variogram().
# Para esta actividad, ser? necesario eliminar los renglones que contengan NA de su data frame, de otro modo la funci?n variogram(),
# arrojar? errores.
# Eliminando NA
datos3 <- na.omit(datos2)
names(datos3) <- c("Lon", "Lat", "Time", "U", "V", "mngv")
View(datos3)
coordinates(datos3) <- ~ Lon + Lat
# Variograma para magnitud de velocidad
fmla <- mngv ~ 1 # indica una recta horizontal a cualquier altura (la media de los datos)
mv.vgm <- variogram(fmla, datos3)
plot(mv.vgm)
# 10.- Grafique los puntos de su variograma experimental, y proceda a hacer el ajuste
# de su variograma a alg?n tipo de modelo de variograma con la funci?n fit.variogram().
# Aqu? se recomienda usar el modelo exponencial en vez del esf?rico ("Exp").
mv.fit <- fit.variogram(mv.vgm, model=vgm(6, model = "Exp", nugget = 1))
# 11.- Grafique la curva resultante, junto con el variograma experimental.
plot(mv.vgm, mv.fit)
# 12.- Proceda a hacer el kriging para interpolar a los puntos de su malla (elaborada en el paso 8),
# mediante la funci?n krige(). El resultado de esta operaci?n es un data frame espacial.
# Proceda a convertir ese resultado a data.frame usual.
malla2 # malla a interpolar
coordinates(malla2) <- ~ lon + lat
mv.kriged <- krige(fmla, datos3, malla2, model=mv.fit)
mvk1 <- matrix(mv.kriged$var1.pred, nrow=190 , ncol=80, byrow=F)
Mbreaks <- pretty(range(mvk1, na.rm = T),10)
Mcols <- colorRampPalette(c("cornsilk2","violet","violetred1","violetred4"),space="rgb")
DrawContColors(list(lasx=lon2, lasy=lat2, mm=mvk1), Mbreaks, Mcols, pp=pp, polmandatory = F)
library(ncdf4)
library(gstat)
library(sp)
#Abrir Netcdf
nc<-nc_open("VientoMx.nc")
#Extraer variable
lon <- ncvar_get(nc, "lon") - 360 # Convertimos a absoluto
lat <- ncvar_get(nc, "lat")
tm <- ncvar_get(nc, "time")
#Conversión de formato de la variable tiempo
tm <- as.Date(tm, origin="1800-01-01 00:00:00")
#obtener las componentes de la velocidad
u <- ncvar_get(nc, "uwnd")
v <- ncvar_get(nc, "vwnd")
#Tranformar nuestros datos un data frame
datos <- expand.grid(lon=lon, lat=lat, time=tm)
#Añadir al dataframe las componentes u y v
datos$uwnd <- as.numeric(u)
datos$vwnd <- as.numeric(v)
#Añadición de la columna magnitud de la velocidad
datos$mngv <- sqrt(datos$u^2 + datos$v^2)
#Reordenamiento del formato de fecha a año-mes-dia para posteriormente realizar un filtrado
datos$time <- as.Date(datos$time, format= "%Y-%m-%d")
#Filtrar datos a el mes 08
agost<-subset(datos, time=="2010-08-01")
#Para la  delimitación de fronteras
pp <- read.csv("Mexico.csv")
#Procesar la información exclusivamente del mes 08
uwndSecc <- u[,,08]
vwndSecc <- v[,,08]
#Obtención de magnitud
V<- sqrt(uwndSecc^2 + vwndSecc^2)
#Para  dibujar el mapa de contornos
Mbreaks <- pretty(range(V, na.rm = T),10)
Mcols <- colorRampPalette(c("cornsilk2","violet","violetred1","violetred4"),space="rgb")
DrawContColors(list(lasx=lon, lasy=lat, mm=V), Mbreaks, Mcols, pp=pp)
#Pasos para la interpolación
#Para generar una mayor resolución
data.grid <- expand.grid(LON = seq(-130, -70, .32), LAT = seq(10, 34.8, .32))
#Omitir datos faltantes
agosna<-na.omit(agost)
#Convertimos a 'SpatialPointsDataFrame'
coordinates(agosna) <- ~ lon + lat
#Revisamos su estructura
str(agosna)
magV <- mngv ~ 1  # aqui selecionas de la lista la magnitud del viento
#Generación del variograma
varimag <- variogram(magV, agosna)
#Se gráfica
plot(varimag)
#Ajuste del variograma a una función exponencial
varimag.fit <- fit.variogram(varimag, model=vgm(6, model = "Exp", nugget = 1)) # Otro modelo
#Gráficación nuevamente
plot(varimag, varimag.fit)
# cambio el data frame data.grid a 'SpatialPointsDataFrame'
coordinates(data.grid) <- ~ LON + LAT
#Realización del kriging
kriged <- krige(magV, agosna, data.grid, model=varimag.fit)
#Conversión de los resultados el kriging a data frame
dataframe<-as.data.frame(kriged)
#Arreglo de los datos para la función DrawContColors
#Método provisto por el profesor
mt<-ArreglaMtx(dataframe$LON, dataframe$LAT, dataframe$var1.pred)
#Método alternativo
XXX<- seq(-130, -70, .32)
YYY<- seq(10, 34.8, .32)
#
#  XX <- as.numeric(data.grid$LON)
#  YY <- as.numeric(data.grid$LAT)
VV <-matrix(dataframe$var1.pred, nrow=188,ncol=78)
#
#
#
# Graficación de los datos del kriging
DrawContColors(list(lasx=mt$lasx, lasy=mt$lasy, mm=mt$mm), Mbreaks, Mcols, pp=pp)
DrawContColors(list(lasx=XXX, lasy=YYY, mm=VV), Mbreaks, Mcols, pp=pp)
#Abrimos datos NETCDF
nc<-nc_open("VientoMx.nc")
#Estraemos sus variables
lon <- ncvar_get(nc, "lon") - 360 # Convertimos a absoluto
lat <- ncvar_get(nc, "lat")
tm <- ncvar_get(nc, "time")
tm <- as.Date(tm, origin="1800-01-01 00:00:00")  #Aquí fijamos el tiempo
u <- ncvar_get(nc, "uwnd")
v <- ncvar_get(nc, "vwnd")
#Creamos los dataframes y añadimos variables (sus compenetes UV así como su magnitud)
datos <- expand.grid(lon=lon, lat=lat, time=tm)
datos$uwnd <- as.numeric(u)
datos$vwnd <- as.numeric(v)
datos$mngv <- sqrt(datos$u^2 + datos$v^2)
#Ajuste de tiempoy extracción, en este caso, el mes de Agosto
datos$time <- as.Date(datos$time, format= "%Y-%m-%d")
agost<-subset(datos, time=="2010-08-01")
#Aquí fijamos los límites del contorno del País (frontara)
pp <- read.csv("Mexico.csv")
#En concordancia con el paso anterior, extreaemos los datos del mes de agosto para U y V y sacamos su gagnitud
uwndSecc <- u[,,08]
vwndSecc <- v[,,08]
V<- sqrt(uwndSecc^2 + vwndSecc^2)
# Los adornos para nuestro plot
Mbreaks <- pretty(range(V, na.rm = T),10)
Mcols <- colorRampPalette(c("cornsilk2","violet","violetred1","violetred4"),space="rgb")
#Y aquí hacemos el plot o creamos nuestra figura de contornos para la Magnitud de UV
DrawContColors(list(lasx=lon, lasy=lat, mm=V), Mbreaks, Mcols, pp=pp)
#Primero hacemos nuestro grid, en este caso los vectores que contendrán nuestras latitudes y longitudes para la
#la resolución deseada (.32 km)
data.grid <- expand.grid(LON = seq(-130, -70, .32), LAT = seq(10, 34.8, .32))
#Omitimos datos faltantes
agosna<-na.omit(agost)
#Convertimos a espatial points data frame
coordinates(agosna) <- ~ lon + lat
str(agosna)
magV <- mngv ~ 1  # aqui selecionas de la lista la magnitud del viento
varimag <- variogram(magV, agosna) #Y generamos el Variograma
plot(varimag) #Ploteamos el resultanto del anterior paso (variograma)
#Ajuste de un función (En este caso, le ajustamos a nuestros puntos obtenidos del variogrma una función Exponencial)
varimag.fit <- fit.variogram(varimag, model=vgm(6, model = "Exp", nugget = 1)) # Otro modelo
#El plot
plot(varimag, varimag.fit)
#Ahora hacemos espatial points data frame a los datos LAT LON a nuestros vectores de resolución más fina
coordinates(data.grid) <- ~ LON + LAT
#Aplicamos el método de interpolación usando los datos obtenidos en método de Variograma y los datos de Magnitud de resolución burda
kriged <- krige(magV, agosna, data.grid, model=varimag.fit)
#Los hacemos dataframe
dataframe<-as.data.frame(kriged)
#Aplicamos una receta (programa)
mt<-ArreglaMtx(dataframe$LON, dataframe$LAT, dataframe$var1.pred)
#Adicional%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#%%%%%%%%%%% definimos vectores nuevamente (los usaremos más adelante)
XXX<- seq(-130, -70, .32)
YYY<- seq(10, 34.8, .32)
VV <-matrix(dataframe$var1.pred, nrow=188,ncol=78)
#
#
#
# Y dibujamos los contornos sombreados de lo obtenido con el método de interpolación Kriging
#Para a) usando los programas provistos
DrawContColors(list(lasx=mt$lasx, lasy=mt$lasy, mm=mt$mm), Mbreaks, Mcols, pp=pp)
#Y b sin usar los programas provistos
DrawContColors(list(lasx=XXX, lasy=YYY, mm=VV), Mbreaks, Mcols, pp=pp)
source('/media/checo/7B2C787106E895ED/LigGEST/MiniBiblioteca.R')
setwd("/media/checo/7B2C787106E895ED/LigGEST")
source('/media/checo/7B2C787106E895ED/LigGEST/MiniBiblioteca.R')
forceNum("44t")
as.numeric("44t")
setwd("/media/checo/7B2C787106E895ED/LigGEST")
